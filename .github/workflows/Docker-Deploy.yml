name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
    - gcloud

env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}
  GCE_INSTANCE: crm-docker   # TODO: update to instance name
  GCE_INSTANCE_ZONE: us-central1-a   # TODO: update to instance zone
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_USER: ${{ secrets.DB_USER }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        project_id: ${{ secrets.RUN_PROJECT }}    
    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    - name: Install dependencies
      run: npm ci --only=production
      working-directory: ./client
    # Build production build 
    - name: Create production build
      run: CI=false INLINE_RUNTIME_CHUNK=false npm run build
      working-directory: ./client
     #Build the Docker image
    - name: Build image
      run: make build
    # Push the Docker image to Google Container Registry
    - name: Publish image
      run: make push
    # - name: Create Instance with Container
    #   run: |-
    #     gcloud compute instances create "$GCE_INSTANCE" \
    #     --image-project cos-cloud \
    #     --image cos-stable-85-13310-1041-28 \
    #     --zone "$GCE_INSTANCE_ZONE" \
    #     --service-account "$SERVICE_ACCOUNT" \
    #     --tags http-server \
    #     --machine-type e2-medium
    - name: deploy
      run: make deploy